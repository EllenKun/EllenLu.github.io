import{_ as s,c as n,o as a,a as l}from"./app.d5b37fa2.js";const F=JSON.parse('{"title":"CSS啥也不会","description":"","frontmatter":{},"headers":[{"level":3,"title":"CSS盒模型","slug":"css盒模型","link":"#css盒模型","children":[]},{"level":3,"title":"CSS选择符","slug":"css选择符","link":"#css选择符","children":[]},{"level":3,"title":"伪类和为元素","slug":"伪类和为元素","link":"#伪类和为元素","children":[]},{"level":3,"title":"水平垂直居中","slug":"水平垂直居中","link":"#水平垂直居中","children":[]},{"level":3,"title":"position的值","slug":"position的值","link":"#position的值","children":[]},{"level":3,"title":"flex布局","slug":"flex布局","link":"#flex布局","children":[]},{"level":3,"title":"margin和padding使用场景","slug":"margin和padding使用场景","link":"#margin和padding使用场景","children":[]}],"relativePath":"frontEnd/interview/CSS.md","lastUpdated":null}'),p={name:"frontEnd/interview/CSS.md"},e=l(`<h1 id="css啥也不会" tabindex="-1">CSS啥也不会 <a class="header-anchor" href="#css啥也不会" aria-hidden="true">#</a></h1><h3 id="css盒模型" tabindex="-1">CSS盒模型 <a class="header-anchor" href="#css盒模型" aria-hidden="true">#</a></h3><p>盒模型 = content + padding + margin + border<br> 有两种：</p><ul><li>W3C标准盒模型: width&amp;height只包含<strong>content</strong></li><li>IE盒模型: width&amp;height包含<strong>content+border+padding</strong></li></ul><p>可以通过修改元素的box-sizing属性来改变元素的盒模型。box-sizing默认content-box(W3C),border-box(IE)</p><h3 id="css选择符" tabindex="-1">CSS选择符 <a class="header-anchor" href="#css选择符" aria-hidden="true">#</a></h3><ol><li>id选择器 #id</li><li>class选择器 .class-name</li><li>标签选择器 p div span</li><li>后代选择器 div p</li><li>子选择器 ul&gt;li</li><li>兄弟选择器 div~span</li><li>相邻兄弟选择器 div+span</li><li>属性选择器</li><li>伪类选择器 a:hover li:nth-child</li><li>伪元素选择器 ::before ::after</li></ol><h3 id="伪类和为元素" tabindex="-1">伪类和为元素 <a class="header-anchor" href="#伪类和为元素" aria-hidden="true">#</a></h3><p>伪类一般匹配的是元素的一些特殊状态，如hover、link等，根据用户行为而动态变化<br> 伪元素一般匹配的特殊的位置，比如after、before等，创建一些不在文档树中的元素，并为其添加样式。比如在元素前增加文本，并为文本添加样式</p><h3 id="水平垂直居中" tabindex="-1">水平垂直居中 <a class="header-anchor" href="#水平垂直居中" aria-hidden="true">#</a></h3><ol><li><p>flex布局</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">content</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> flex</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">justify-content</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> center</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">align-items</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> center</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></li><li><p>绝对定位</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">parent</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> relative</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">child</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> absolute</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#B2CCD6;">margin</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">auto</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#B2CCD6;">top</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#B2CCD6;">left</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#B2CCD6;">bottom</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#B2CCD6;">right</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></li><li><p>绝对定位+transform</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">parent</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> relative</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">child</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> absolute</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">top</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">50%</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">left</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">50%</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">transform</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">translate</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">-50%</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">-50%</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></li></ol><h3 id="position的值" tabindex="-1">position的值 <a class="header-anchor" href="#position的值" aria-hidden="true">#</a></h3><ol><li>static: 默认值，常规文档流</li><li>relative: 常规文档流，根据自身位置偏移</li><li>absolute: 绝对定位元素，相对于值不为static的第一个父元素的padding box进行定位，脱离文档流</li><li>fixed: 相对于浏览器视窗进行定位，脱离文档流</li><li>inherit: 从父元素继承position属性的值</li></ol><h3 id="flex布局" tabindex="-1">flex布局 <a class="header-anchor" href="#flex布局" aria-hidden="true">#</a></h3><p>flex布局是CSS3新增的一种布局方式，我们可以通过将一个元素的display属性值设置为flex从而使它成为一个flex容器，它的所有子元素都会成为它的项目。<br> 容器属性：</p><blockquote><p>flex-direction：决定主轴的方向<br> flex-wrap：换行方式<br> flex-flow：direction+wrap<br> justify-content：在主轴上的对齐方式<br> align-items：交叉轴上对齐方式<br> align-content：多根轴线的对齐方式</p></blockquote><p>项目属性：</p><blockquote><p>order：项目的排列顺序。数值越小，排列越靠前，默认为0<br> flex-grow：项目的放大比例，默认为0，即如果存在剩余空间，也不放大<br> flex-shrink：项目的缩小比例，默认为1，即如果空间不足，该项目将缩小<br> flex-basis：在分配多余空间之前，项目占据的主轴空间。浏览器根据这个属性，计算主轴是否有多余空间。默认值为auto，即项目的本来大小</p></blockquote><h3 id="margin和padding使用场景" tabindex="-1">margin和padding使用场景 <a class="header-anchor" href="#margin和padding使用场景" aria-hidden="true">#</a></h3><p>margin是用来隔开元素与元素的间距；padding是用来隔开元素与内容的间隔。<br> 使用margin：</p><ul><li>需要在border外侧添加空白时。</li><li>空白处不需要背景（色）时。</li><li>上下相连的两个盒子之间的空白，需要相互抵消时。如15px+20px的margin，将得到20px的空白。</li></ul><p>使用padding：</p><ul><li>需要在border内测添加空白时。</li><li>空白处需要背景（色）时。</li><li>上下相连的两个盒子之间的空白，希望等于两者之和时。如15px+20px的padding，将得到35px的空白。</li></ul>`,23),o=[e];function t(i,r,c,D,C,d){return a(),n("div",null,o)}const h=s(p,[["render",t]]);export{F as __pageData,h as default};
